services:

  amlight:
    container_name: amlight
    image: kytos-sdx
    privileged: true
    tty: true
    restart: always
    networks:
      kytos_network:
        ipv4_address: 192.168.0.2
    ports:
      - 6653:6653
      - 8181:8181
    environment:
      MONGO_HOST_SEEDS: ${MONGO_HOST_SEEDS}
      MONGO_USERNAME: ${AMPATH_MONGO_USERNAME}
      MONGO_PASSWORD: ${AMPATH_MONGO_PASSWORD}
      MONGO_DBNAME: ${AMPATH_MONGO_DBNAME}
      MODEL_VERSION: ${MODEL_VERSION}
      OXPO_NAME: ${AMPATH_OXP_NAME}
      OXPO_URL: ${AMPATH_OXP_URL}
      #
      SDXLC_URL: ${AMPATH_SDXLC_URL}
      KYTOS_TOPOLOGY: ${KYTOS_TOPOLOGY}
    depends_on:
      mongo-ready:
        condition: service_healthy
    command: tail -f /var/log/syslog

  sax:
    container_name: sax
    image: kytos-sdx
    privileged: true
    tty: true
    restart: always
    networks:
      kytos_network:
        ipv4_address: 192.168.0.3
    ports:
      - 6654:6653
      - 8282:8181
    environment:
      MONGO_HOST_SEEDS: ${MONGO_HOST_SEEDS}
      MONGO_USERNAME: ${SAX_MONGO_USERNAME}
      MONGO_PASSWORD: ${SAX_MONGO_PASSWORD}
      MONGO_DBNAME: ${SAX_MONGO_DBNAME}
      MODEL_VERSION: ${MODEL_VERSION}
      OXPO_NAME: ${SAX_OXP_NAME}
      OXPO_URL: ${SAX_OXP_URL}
      #
      SDXLC_URL: ${SAX_SDXLC_URL}
      KYTOS_TOPOLOGY: ${KYTOS_TOPOLOGY}
    depends_on:
      mongo-ready:
        condition: service_healthy
    command: tail -f /var/log/syslog

  tenet:
    container_name: tenet
    image: kytos-sdx
    privileged: true
    restart: always
    tty: true
    networks:
      kytos_network:
        ipv4_address: 192.168.0.4
    ports:
      - 6655:6653
      - 8383:8181
    environment:
      MONGO_HOST_SEEDS: ${MONGO_HOST_SEEDS}
      MONGO_USERNAME: ${TENET_MONGO_USERNAME}
      MONGO_PASSWORD: ${TENET_MONGO_PASSWORD}
      MONGO_DBNAME: ${TENET_MONGO_DBNAME}
      MODEL_VERSION: ${MODEL_VERSION}
      OXPO_NAME: ${TENET_OXP_NAME}
      OXPO_URL: ${TENET_OXP_URL}
      #
      SDXLC_URL: ${TENET_SDXLC_URL}
      KYTOS_TOPOLOGY: ${KYTOS_TOPOLOGY}
    depends_on:
      mongo-ready:
        condition: service_healthy
    command: tail -f /var/log/syslog

  mongo1t:
    container_name: mongo1t
    image: mongo:7.0
    restart: always
    networks:
      kytos_network:
        ipv4_address: 192.168.0.6
    ports:
      - 27027:27027
    volumes:
      - ./os_base/mongo_base:/mongo_base
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0", "--port", "27027" ]
    environment:
      MONGO_HOST_SEEDS: ${MONGO_HOST_SEEDS}
      MONGO_INIT_ROOT_USERNAME: ${ROOT_DB_USER}
      MONGO_INIT_ROOT_PASSWORD: ${ROOT_DB_PASS}
      MONGO_DBNAME: ${ROOT_DB}

  mongo2t:
    container_name: mongo2t
    image: mongo:7.0
    restart: always
    networks:
      kytos_network:
        ipv4_address: 192.168.0.7
    ports:
      - 27028:27028
    volumes:
      - ./os_base/mongo_base:/mongo_base
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0", "--port", "27028" ]
    environment:
      MONGO_HOST_SEEDS: ${MONGO_HOST_SEEDS}
      MONGO_INIT_ROOT_USERNAME: ${ROOT_DB_USER}
      MONGO_INIT_ROOT_PASSWORD: ${ROOT_DB_PASS}
      MONGO_DBNAME: ${ROOT_DB}

  mongo3t:
    container_name: mongo3t
    image: mongo:7.0
    restart: always
    networks:
      kytos_network:
        ipv4_address: 192.168.0.8
    ports:
      - 27029:27029
    volumes:
      - ./os_base/mongo_base:/mongo_base
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0", "--port", "27029" ]
    environment:
      MONGO_HOST_SEEDS: ${MONGO_HOST_SEEDS}
      MONGO_INIT_ROOT_USERNAME: ${ROOT_DB_USER}
      MONGO_INIT_ROOT_PASSWORD: ${ROOT_DB_PASS}
      MONGO_DBNAME: ${ROOT_DB}

  mongo-setup:
    container_name: mongo-setup
    image: mongo:7.0
    restart: on-failure
    networks:
      kytos_network:
        ipv4_address: 192.168.0.9
    volumes:
      - ./scripts:/scripts
    entrypoint: ["/scripts/rs-init.sh"]
    environment:
      MONGO_HOST_SEEDS: ${MONGO_HOST_SEEDS}
      MONGO_INIT_ROOT_USERNAME: ${ROOT_DB_USER}
      MONGO_INIT_ROOT_PASSWORD: ${ROOT_DB_PASS}
      MONGO_DBNAME: ${ROOT_DB}
    depends_on:
      - mongo1t
      - mongo2t
      - mongo3t

  mongo-ready:
    container_name: mongo-ready
    image: mongo:7.0
    restart: on-failure
    networks:
      kytos_network:
        ipv4_address: 192.168.0.10
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh --quiet "mongodb://${SDX_CONTROLLER_DB_USER}:${SDX_CONTROLLER_DB_PASS}@${MONGO_HOST_SEEDS}/?authSource=${SDX_CONTROLLER_DB}"
      interval: 5s
      timeout: 5s
      retries: 60
    volumes:
      - ./scripts:/scripts
    entrypoint: ["/scripts/rs-add.sh"]
    depends_on:
      - mongo-setup

  mininet:
    container_name: mininet
    image: mininet
    privileged: true
    tty: true
    networks:
      kytos_network:
        ipv4_address: 192.168.0.11
    volumes:
      - /lib/modules:/lib/modules
    depends_on:
      - amlight
      - sax
      - tenet

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:latest
    hostname: "rabbitmq-host"
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 5s
      timeout: 5s
      retries: 60
    networks:
      kytos_network:
        ipv4_address: 192.168.0.12
    ports:
      # AMQP protocol port
      - '5672:5672'
      # HTTP management UI
      - '15672:15672'
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}

  amlight-sdx-lc:
    container_name: amlight-sdx-lc
    image: sdx-lc
    privileged: true
    tty: true
    restart: always
    networks:
      kytos_network:
        ipv4_address: 192.168.0.15
    ports:
      - 8081:8080
    environment:
      MONGODB_CONNSTRING: "mongodb://${SDX_LC_DB_USER}:${SDX_LC_DB_PASS}@${MONGO_HOST_SEEDS}/?authSource=${SDX_LC_DB_NAME}"
      OXP_CONNECTION_URL: ${AMPATH_OXP_CONNECTION_URL}
      OXP_PULL_URL: ${AMPATH_OXP_PULL_URL}
      OXP_PULL_INTERVAL: ${OXP_PULL_INTERVAL}
      DB_NAME: ${SDX_LC_DB_NAME}
      DB_CONFIG_TABLE_NAME: ${AMPATH_LC_DB_NAME}
      SDXLC_MONGO_USERNAME: ${SDX_LC_DB_USER}
      SDXLC_MONGO_PASSWOD: ${SDX_LC_DB_PASS}
      SDXLC_DOMAIN: ${AMPATH_OXP_URL}
      SDXLC_PORT: ${SDXLC_PORT}
      # change to local controller host name
      PUB_TOPIC: ${SDX_LC_PUB_TOPIC}
      PUB_QUEUE: ${SDX_LC_PUB_QUEUE}
      SUB_QUEUE: ${SDX_LC_SUB_QUEUE}
      SUB_EXCHANGE: ${SDX_LC_SUB_EXCHANGE}
      SUB_TOPIC: ${AMPATH_OXP_URL}
      MQ_HOST: ${RABBITMQ_HOST}
      MQ_PORT: ${RABBITMQ_PORT}
      MQ_USER: ${RABBITMQ_DEFAULT_USER}
      MQ_PASS: ${RABBITMQ_DEFAULT_PASS}
    depends_on:
      mongo-ready:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  sax-sdx-lc:
    container_name: sax-sdx-lc
    image: sdx-lc
    privileged: true
    tty: true
    restart: always
    networks:
      kytos_network:
        ipv4_address: 192.168.0.16
    ports:
      - 8082:8080
    environment:
      MONGODB_CONNSTRING: "mongodb://${SDX_LC_DB_USER}:${SDX_LC_DB_PASS}@${MONGO_HOST_SEEDS}/?authSource=${SDX_LC_DB_NAME}"
      # Oxpo variables
      OXP_CONNECTION_URL: ${SAX_OXP_CONNECTION_URL}
      OXP_PULL_URL: ${SAX_OXP_PULL_URL}
      OXP_PULL_INTERVAL: ${OXP_PULL_INTERVAL}
      # SDX_LC Variables
      DB_NAME: ${SDX_LC_DB_NAME}
      DB_CONFIG_TABLE_NAME: ${SAX_LC_DB_NAME}
      SDXLC_MONGO_USERNAME: ${SDX_LC_DB_USER}
      SDXLC_MONGO_PASSWOD: ${SDX_LC_DB_PASS}
      SDXLC_DOMAIN: ${SAX_OXP_URL}
      SDXLC_PORT: ${SDXLC_PORT}
      # change to local controller host name
      PUB_TOPIC: ${SDX_LC_PUB_TOPIC}
      PUB_QUEUE: ${SDX_LC_PUB_QUEUE}
      SUB_QUEUE: ${SDX_LC_SUB_QUEUE}
      SUB_EXCHANGE: ${SDX_LC_SUB_EXCHANGE}
      SUB_TOPIC: ${SAX_OXP_URL}
      MQ_HOST: ${RABBITMQ_HOST}
      MQ_PORT: ${RABBITMQ_PORT}
      MQ_USER: ${RABBITMQ_DEFAULT_USER}
      MQ_PASS: ${RABBITMQ_DEFAULT_PASS}
    depends_on:
      mongo-ready:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  tenet-sdx-lc:
    container_name: tenet-sdx-lc
    image: sdx-lc
    privileged: true
    restart: always
    tty: true
    networks:
      kytos_network:
        ipv4_address: 192.168.0.17
    ports:
      - 8083:8080
    environment:
      MONGODB_CONNSTRING: "mongodb://${SDX_LC_DB_USER}:${SDX_LC_DB_PASS}@${MONGO_HOST_SEEDS}/?authSource=${SDX_LC_DB_NAME}"
      # Oxpo variables
      OXP_CONNECTION_URL: ${TENET_OXP_CONNECTION_URL}
      OXP_PULL_URL: ${TENET_OXP_PULL_URL}
      OXP_PULL_INTERVAL: ${OXP_PULL_INTERVAL}
      # SDX_LC Variables
      DB_NAME: ${SDX_LC_DB_NAME}
      DB_CONFIG_TABLE_NAME: ${TENET_LC_DB_NAME}
      SDXLC_MONGO_USERNAME: ${SDX_LC_DB_USER}
      SDXLC_MONGO_PASSWOD: ${SDX_LC_DB_PASS}
      SDXLC_DOMAIN: ${TENET_OXP_URL}
      SDXLC_PORT: ${SDXLC_PORT}
      # change to local controller host name
      PUB_TOPIC: ${SDX_LC_PUB_TOPIC}
      PUB_QUEUE: ${SDX_LC_PUB_QUEUE}
      SUB_QUEUE: ${SDX_LC_SUB_QUEUE}
      SUB_EXCHANGE: ${SDX_LC_SUB_EXCHANGE}
      SUB_TOPIC: ${TENET_OXP_URL}
      MQ_HOST: ${RABBITMQ_HOST}
      MQ_PORT: ${RABBITMQ_PORT}
      MQ_USER: ${RABBITMQ_DEFAULT_USER}
      MQ_PASS: ${RABBITMQ_DEFAULT_PASS}
    depends_on:
      mongo-ready:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  sdx-controller:
    container_name: sdx-controller
    image: sdx-controller
    privileged: true
    restart: always
    depends_on:
      mongo-ready:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    tty: true
    networks:
      kytos_network:
        ipv4_address: 192.168.0.20
    volumes:
      - ./datamodel/src/sdx_datamodel:/opt/venv/lib/python3.9/site-packages/sdx_datamodel
    ports:
      - 8080:8080
    environment:
      MONGODB_CONNSTRING: "mongodb://${SDX_CONTROLLER_DB_USER}:${SDX_CONTROLLER_DB_PASS}@${MONGO_HOST_SEEDS}/?authSource=${SDX_CONTROLLER_DB}"
      MQ_HOST: ${RABBITMQ_HOST}
      MQ_PORT: ${RABBITMQ_PORT}
      MQ_USER: ${RABBITMQ_DEFAULT_USER}
      MQ_PASS: ${RABBITMQ_DEFAULT_PASS}
      SUB_TOPIC: ${SDX_CONTROLLER_SUB_TOPIC}
      SUB_QUEUE: ${SDX_CONTROLLER_SUB_QUEUE}
      DB_NAME: ${SDX_CONTROLLER_DB_NAME}
      DB_CONFIG_TABLE_NAME: ${SDX_CONTROLLER_TABLE_NAME}
    entrypoint: ["python3", "-m", "uvicorn", "sdx_controller.app:asgi_app", "--host", "0.0.0.0", "--port", "8080"]

networks:
  kytos_network:
    ipam:
      driver: default
      config:
        - subnet: 192.168.0.0/24
          gateway: 192.168.0.1

volumes:
  persistent:
