version: '3.9'

services:

  amlight:
    container_name: amlight
    image: amlight
    privileged: true
    tty: true
    restart: always
    networks:
      kytos_network:
        ipv4_address: 192.168.0.2
    ports:
      - 6653:6653
      - 8181:8181
    volumes:
      - ./tests:/tests
      - ./scripts:/scripts
      - ./etc/kytos:/etc/kytos
      - ./container-sdx-lc/logs/amlight:/var/log/amlight
    env_file: 
      - .env
    environment:
      MONGODB_CONNSTRING: ${MONGODB_CONNSTRING}
      MONGO_HOST_SEEDS: ${MONGO_HOST_SEEDS}
      MONGO_INITDB_ROOT_USERNAME: ${ROOT_DB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${ROOT_DB_PASS}
      MONGO_USERNAME: 'amlight_user'
      MONGO_PASSWORD: 'amlight_pwd'
      MONGO_DBNAME: 'amlight'
      MODEL_VERSION: ${MODEL_VERSION}
      OXPO: 'kytos'
      OXPO_NAME: 'Ampath-OXP'
      OXPO_URL: 'ampath.net'
      # SDX_LC Variables
      SDXLC_MONGO_DB: ${SDX_LC_DB_NAME}
      SDXLC_MONGO_COLLECTION: 'amlight-sdx-lc'
      SDXLC_MONGO_USERNAME: ${SDX_LC_DB_USER}
      SDXLC_MONGO_PASSWOD: ${SDX_LC_DB_PASS}
      # change to local controller host name
      # SDXLC_DOMAIN: 'amlight'
      SDXLC_DOMAIN: 'urn:sdx:topology:ampath.net'
      SDXLC_HOST: ${SDX_LC_HOST}
      SDXLC_PORT: ${SDX_LC_PORT}
      SDXLC_VERSION: ${SDX_LC_VERSION}
      SDX_MQ_IP: ${SDX_MQ_IP}
      PUB_TOPIC: ${PUB_TOPIC}
      PUB_QUEUE: ${PUB_QUEUE}
      SUB_QUEUE: ${SUB_QUEUE}
      SUB_EXCHANGE: ${SUB_EXCHANGE}
      # change to local controller config (lcX_q1)
      SUB_TOPIC: ${SUB_TOPIC}
      MQ_NAME: ${MQ_NAME}
      MQ_HOST: ${MQ_HOST}
      MQ_PORT: ${MQ_PORT}
      DOMAIN_CONTROLLER_URL: ${DOMAIN_CONTROLLER_URL}
      DOMAIN_CONTROLLER_PULL_URL: ${DOMAIN_CONTROLLER_PULL_URL}
      DOMAIN_CONTROLLER_PULL_INTERVAL: ${DOMAIN_CONTROLLER_PULL_INTERVAL}
      KYTOS_URL: ${KYTOS_URL}
    depends_on:
      - mongo-ready
      - rabbitmq3
    entrypoint: ["/scripts/amlight_sdx_lc_kytos.sh"]

  sax:
    container_name: sax
    image: sax
    privileged: true
    tty: true
    restart: always
    networks:
      kytos_network:
        ipv4_address: 192.168.0.3
    ports:
      - 6654:6653
      - 8282:8181
    volumes:
      - ./tests:/tests
      - ./scripts:/scripts
      - ./etc/kytos:/etc/kytos
    env_file: 
      - .env
    environment:
      MONGODB_CONNSTRING: ${MONGODB_CONNSTRING}
      MONGO_HOST_SEEDS: ${MONGO_HOST_SEEDS}
      MONGO_INITDB_ROOT_USERNAME: ${ROOT_DB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${ROOT_DB_PASS}
      MONGO_USERNAME: 'sax_user'
      MONGO_PASSWORD: 'sax_pwd'
      MONGO_DBNAME: 'sax'
      MODEL_VERSION: ${MODEL_VERSION}
      OXPO: 'kytos'
      OXPO_NAME: 'Ampath-OXP'
      OXPO_URL: 'ampath.net'
      # SDX_LC Variables
      SDXLC_MONGO_DB: ${SDX_LC_DB_NAME}
      SDXLC_MONGO_COLLECTION: 'sax-sdx-lc'
      SDXLC_MONGO_USERNAME: ${SDX_LC_DB_USER}
      SDXLC_MONGO_PASSWOD: ${SDX_LC_DB_PASS}
      # change to local controller host name
      SDXLC_DOMAIN: 'sax'
      SDXLC_HOST: ${SDX_LC_HOST}
      SDXLC_PORT: ${SDX_LC_PORT}
      SDXLC_VERSION: ${SDX_LC_VERSION}
      SDX_MQ_IP: ${SDX_MQ_IP}
      PUB_TOPIC: ${PUB_TOPIC}
      PUB_QUEUE: ${PUB_QUEUE}
      SUB_QUEUE: ${SUB_QUEUE}
      SUB_EXCHANGE: ${SUB_EXCHANGE}
      # change to local controller config (lcX_q1)
      SUB_TOPIC: ${SUB_TOPIC}
      MQ_NAME: ${MQ_NAME}
      MQ_HOST: ${MQ_HOST}
      MQ_PORT: ${MQ_PORT}
      DOMAIN_CONTROLLER_URL: ${DOMAIN_CONTROLLER_URL}
      DOMAIN_CONTROLLER_PULL_URL: ${DOMAIN_CONTROLLER_PULL_URL}
      DOMAIN_CONTROLLER_PULL_INTERVAL: ${DOMAIN_CONTROLLER_PULL_INTERVAL}
      KYTOS_URL: ${KYTOS_URL}
    depends_on:
      - mongo-ready
      - rabbitmq3
    entrypoint: ["/scripts/sax_sdx_lc_kytos.sh"]

  tenet:
    container_name: tenet
    image: tenet
    privileged: true
    restart: always
    tty: true
    networks:
      kytos_network:
        ipv4_address: 192.168.0.4
    ports:
      - 6655:6653
      - 8383:8181
    volumes:
      - ./tests:/tests
      - ./scripts:/scripts
      - ./etc/kytos:/etc/kytos
    env_file: 
      - .env
    environment:
      MONGODB_CONNSTRING: ${MONGODB_CONNSTRING}
      MONGO_HOST_SEEDS: ${MONGO_HOST_SEEDS}
      MONGO_INITDB_ROOT_USERNAME: ${ROOT_DB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${ROOT_DB_PASS}
      MONGO_USERNAME: 'tenet_user'
      MONGO_PASSWORD: 'tenet_pwd'
      MONGO_DBNAME: 'tenet'
      MODEL_VERSION: ${MODEL_VERSION}
      OXPO: 'kytos'
      OXPO_NAME: 'tenet-oxp'
      OXPO_URL: 'tenet.ac.za'
      # SDX_LC Variables
      SDXLC_MONGO_DB: ${SDX_LC_DB_NAME}
      SDXLC_MONGO_COLLECTION: 'tenet-sdx-lc'
      SDXLC_MONGO_USERNAME: ${SDX_LC_DB_USER}
      SDXLC_MONGO_PASSWOD: ${SDX_LC_DB_PASS}
      # change to local controller host name
      SDXLC_DOMAIN: 'tenet'
      SDXLC_HOST: ${SDX_LC_HOST}
      SDXLC_PORT: ${SDX_LC_PORT}
      SDXLC_VERSION: ${SDX_LC_VERSION}
      SDX_MQ_IP: ${SDX_MQ_IP}
      PUB_TOPIC: ${PUB_TOPIC}
      PUB_QUEUE: ${PUB_QUEUE}
      SUB_QUEUE: ${SUB_QUEUE}
      SUB_EXCHANGE: ${SUB_EXCHANGE}
      # change to local controller config (lcX_q1)
      SUB_TOPIC: ${SUB_TOPIC}
      MQ_NAME: ${MQ_NAME}
      MQ_HOST: ${MQ_HOST}
      MQ_PORT: ${MQ_PORT}
      DOMAIN_CONTROLLER_URL: ${DOMAIN_CONTROLLER_URL}
      DOMAIN_CONTROLLER_PULL_URL: ${DOMAIN_CONTROLLER_PULL_URL}
      DOMAIN_CONTROLLER_PULL_INTERVAL: ${DOMAIN_CONTROLLER_PULL_INTERVAL}
      KYTOS_URL: ${KYTOS_URL}
    depends_on:
      - mongo-ready
      - rabbitmq3
    entrypoint: ["/scripts/tenet_sdx_lc_kytos.sh"]

  sdx-test:
    container_name: sdx-test
    image: sdx-test
    privileged: true
    tty: true
    restart: always
    networks:
      kytos_network:
        ipv4_address: 192.168.0.5
    ports:
      - 6656:6653
      - 8484:8181
    volumes:
      - ./tests:/tests
      - ./scripts:/scripts
      - ./etc/kytos:/etc/kytos
    env_file: 
      - .env
    environment:
      MONGODB_CONNSTRING: ${MONGODB_CONNSTRING}
      MONGO_HOST_SEEDS: ${MONGO_HOST_SEEDS}
      MONGO_INITDB_ROOT_USERNAME: ${ROOT_DB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${ROOT_DB_PASS}
      MONGO_USERNAME: 'sdx_test_user'
      MONGO_PASSWORD: 'sdx_test_pwd'
      MONGO_DBNAME: 'sdx_test'
      MODEL_VERSION: ${MODEL_VERSION}
      OXPO: 'kytos'
      OXPO_NAME: 'Test-OXP'
      OXPO_URL: 'test.net'
      # SDX_LC Variables
      SDXLC_MONGO_DB: ${SDX_LC_DB_NAME}
      SDXLC_MONGO_COLLECTION: 'test-sdx-lc'
      SDXLC_MONGO_USERNAME: ${SDX_LC_DB_USER}
      SDXLC_MONGO_PASSWOD: ${SDX_LC_DB_PASS}
      SDXLC_DOMAIN: 'test'
      # change to local controller host name
      SDXLC_HOST: ${SDX_LC_HOST}
      SDXLC_PORT: ${SDX_LC_PORT}
      SDXLC_VERSION: ${SDX_LC_VERSION}
      SDX_MQ_IP: ${SDX_MQ_IP}
      PUB_TOPIC: ${PUB_TOPIC}
      PUB_QUEUE: ${PUB_QUEUE}
      SUB_QUEUE: ${SUB_QUEUE}
      SUB_EXCHANGE: ${SUB_EXCHANGE}
      # change to local controller config (lcX_q1)
      SUB_TOPIC: ${SUB_TOPIC}
      MQ_NAME: ${MQ_NAME}
      MQ_HOST: ${MQ_HOST}
      MQ_PORT: ${MQ_PORT}
      DOMAIN_CONTROLLER_URL: ${DOMAIN_CONTROLLER_URL}
      DOMAIN_CONTROLLER_PULL_URL: ${DOMAIN_CONTROLLER_PULL_URL}
      DOMAIN_CONTROLLER_PULL_INTERVAL: ${DOMAIN_CONTROLLER_PULL_INTERVAL}
      KYTOS_URL: ${KYTOS_URL}
    depends_on:
      - mongo-ready
      - rabbitmq3
    entrypoint: ["/scripts/test_sdx_lc_kytos.sh"]


  mongo1t:
    container_name: mongo1t
    image: sdx-mongo
    restart: always
    networks:
      kytos_network:
        ipv4_address: 192.168.0.6
    ports:
      - 27027:27027
    volumes:
      - ./os_base/mongo_base:/mongo_base
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0", "--port", "27027" ]
    env_file:
      - .env
    environment:
      MONGODB_CONNSTRING: ${MONGODB_CONNSTRING}
      MONGO_HOST_SEEDS: ${MONGO_HOST_SEEDS}
      MONGO_INIT_ROOT_USERNAME: ${ROOT_DB_USER}
      MONGO_INIT_ROOT_PASSWORD: ${ROOT_DB_PASS}
      MONGO_DBNAME: ${ROOT_DB}

  mongo2t:
    container_name: mongo2t
    image: sdx-mongo
    restart: always
    networks:
      kytos_network:
        ipv4_address: 192.168.0.7
    ports:
      - 27028:27028
    volumes:
      - ./os_base/mongo_base:/mongo_base
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0", "--port", "27028" ]
    env_file:
      - .env
    environment:
      MONGODB_CONNSTRING: ${MONGODB_CONNSTRING}
      MONGO_HOST_SEEDS: ${MONGO_HOST_SEEDS}
      MONGO_INIT_ROOT_USERNAME: ${ROOT_DB_USER}
      MONGO_INIT_ROOT_PASSWORD: ${ROOT_DB_PASS}
      MONGO_DBNAME: ${ROOT_DB}

  mongo3t:
    container_name: mongo3t
    image: sdx-mongo
    restart: always
    networks:
      kytos_network:
        ipv4_address: 192.168.0.8
    ports:
      - 27029:27029
    volumes:
      - ./os_base/mongo_base:/mongo_base
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0", "--port", "27029" ]
    env_file:
      - .env
    environment:
      MONGODB_CONNSTRING: ${MONGODB_CONNSTRING}
      MONGO_HOST_SEEDS: ${MONGO_HOST_SEEDS}
      MONGO_INIT_ROOT_USERNAME: ${ROOT_DB_USER}
      MONGO_INIT_ROOT_PASSWORD: ${ROOT_DB_PASS}
      MONGO_DBNAME: ${ROOT_DB}

  mongo-setup:
    container_name: mongo-rs-init
    image: sdx-mongo
    restart: on-failure
    networks:
      kytos_network:
        ipv4_address: 192.168.0.9
    volumes:
      - ./scripts:/scripts
    entrypoint: ["/scripts/rs-init.sh"]
    env_file:
      - .env
    environment:
      MONGODB_CONNSTRING: ${MONGODB_CONNSTRING}
      MONGO_HOST_SEEDS: ${MONGO_HOST_SEEDS}
      MONGO_INIT_ROOT_USERNAME: ${ROOT_DB_USER}
      MONGO_INIT_ROOT_PASSWORD: ${ROOT_DB_PASS}
      MONGO_DBNAME: ${ROOT_DB}
    depends_on:
      - mongo1t
      - mongo2t
      - mongo3t

  mongo-ready:
    container_name: mongo-test-ready
    image: sdx-mongo
    restart: on-failure
    networks:
      kytos_network:
        ipv4_address: 192.168.0.10
    volumes:
      - ./scripts:/scripts
    entrypoint: ["/scripts/rs-add.sh"]
    env_file:
      - .env
    environment:
      MONGODB_CONNSTRING: ${MONGODB_CONNSTRING}
      MONGO_HOST_SEEDS: ${MONGO_HOST_SEEDS}
      MONGO_INIT_ROOT_USERNAME: ${ROOT_DB_USER}
      MONGO_INIT_ROOT_PASSWORD: ${ROOT_DB_PASS}
      MONGO_DBNAME: ${ROOT_DB}
    depends_on:
      - mongo-setup

  mininet:
    container_name: mininet
    image: mininet
    privileged: true
    tty: true
    networks:
      kytos_network:
        ipv4_address: 192.168.0.11
    volumes:
      - /lib/modules:/lib/modules
    depends_on:
      - amlight
      - sax
      - tenet

  rabbitmq3:
    container_name: "rabbitmq"
    image: sdx-rabbit
    networks:
      kytos_network:
        ipv4_address: 192.168.0.12
    ports:
      # AMQP protocol port
      - '5672:5672'
      # HTTP management UI
      - '15672:15672'
    env_file:
      - .env
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}

  worker:
    container_name: "worker"
    image: worker
    volumes:
      - ./container-sdx-controller/worker:/app
      - ./scripts:/scripts
    networks:
      kytos_network:
        ipv4_address: 192.168.0.13
    depends_on:
      - rabbitmq3

  validator:
    container_name: validator
    image: validator
    privileged: true
    tty: true
    restart: always
    networks:
      kytos_network:
        ipv4_address: 192.168.0.14
    ports:
      - 8000:8000
    volumes:
      - ./scripts:/scripts
    entrypoint: [ "gunicorn", "validator.app:app", "-b", "0.0.0.0:8000" ]

  amlight-sdx-lc:
    container_name: amlight-sdx-lc
    image: amlight-sdx-lc
    privileged: true
    tty: true
    restart: always
    networks:
      kytos_network:
        ipv4_address: 192.168.0.15
    ports:
      - 8081:8080
    volumes:
      - ./container-sdx-lc/logs/amlight:/var/log
      - ./scripts:/scripts
    env_file: 
      - .env
    environment:
      MONGODB_CONNSTRING: ${MONGODB_CONNSTRING}
      MONGO_HOST_SEEDS: ${MONGO_HOST_SEEDS}
      MONGO_INITDB_ROOT_USERNAME: ${ROOT_DB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${ROOT_DB_PASS}
      MONGO_USERNAME: 'amlight_user'
      MONGO_PASSWORD: 'amlight_pwd'
      MONGO_DBNAME: 'amlight'
      MODEL_VERSION: ${MODEL_VERSION}
      OXPO: 'kytos'
      OXPO_NAME: 'Ampath-OXP'
      OXPO_URL: 'ampath.net'
      # SDX_LC Variables
      SDXLC_MONGO_DB: ${SDX_LC_DB_NAME}
      SDXLC_MONGO_COLLECTION: 'amlight-sdx-lc'
      SDXLC_MONGO_USERNAME: ${SDX_LC_DB_USER}
      SDXLC_MONGO_PASSWOD: ${SDX_LC_DB_PASS}
      SDXLC_DOMAIN: 'urn:sdx:topology:ampath.net'
      # change to local controller host name
      SDXLC_HOST: ${SDX_LC_HOST}
      SDXLC_PORT: ${SDX_LC_PORT}
      SDXLC_VERSION: ${SDX_LC_VERSION}
      SDX_MQ_IP: ${SDX_MQ_IP}
      PUB_TOPIC: ${PUB_TOPIC}
      PUB_QUEUE: ${PUB_QUEUE}
      SUB_QUEUE: ${SUB_QUEUE}
      SUB_EXCHANGE: ${SUB_EXCHANGE}
      # change to local controller config (lcX_q1)
      SUB_TOPIC: ${SUB_TOPIC}
      MQ_NAME: ${MQ_NAME}
      MQ_HOST: ${MQ_HOST}
      MQ_PORT: ${MQ_PORT}
      DOMAIN_CONTROLLER_URL: ${DOMAIN_CONTROLLER_URL}
      DOMAIN_CONTROLLER_PULL_URL: ${DOMAIN_CONTROLLER_PULL_URL}
      DOMAIN_CONTROLLER_PULL_INTERVAL: ${DOMAIN_CONTROLLER_PULL_INTERVAL}
      KYTOS_URL: ${KYTOS_URL}
    depends_on:
      - mongo-ready
      - rabbitmq3
    entrypoint: [ "gunicorn", "swagger_server.__main__:app", "-b", "0.0.0.0:8080" ]

  sax-sdx-lc:
    container_name: sax-sdx-lc
    image: sax-sdx-lc
    privileged: true
    tty: true
    restart: always
    networks:
      kytos_network:
        ipv4_address: 192.168.0.16
    ports:
      - 8082:8080
    volumes:
      - ./container-sdx-lc/logs/sax:/var/log
      - ./scripts:/scripts
    env_file: 
      - .env
    environment:
      MONGODB_CONNSTRING: ${MONGODB_CONNSTRING}
      MONGO_HOST_SEEDS: ${MONGO_HOST_SEEDS}
      MONGO_INITDB_ROOT_USERNAME: ${ROOT_DB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${ROOT_DB_PASS}
      MONGO_USERNAME: 'sax_user'
      MONGO_PASSWORD: 'sax_pwd'
      MONGO_DBNAME: 'sax'
      MODEL_VERSION: ${MODEL_VERSION}
      OXPO: 'kytos'
      OXPO_NAME: 'Ampath-OXP'
      OXPO_URL: 'ampath.net'
      # SDX_LC Variables
      SDXLC_MONGO_DB: ${SDX_LC_DB_NAME}
      SDXLC_MONGO_COLLECTION: 'sax-sdx-lc'
      SDXLC_MONGO_USERNAME: ${SDX_LC_DB_USER}
      SDXLC_MONGO_PASSWOD: ${SDX_LC_DB_PASS}
      SDXLC_DOMAIN: 'sax'
      # change to local controller host name
      SDXLC_HOST: ${SDX_LC_HOST}
      SDXLC_PORT: ${SDX_LC_PORT}
      SDXLC_VERSION: ${SDX_LC_VERSION}
      SDX_MQ_IP: ${SDX_MQ_IP}
      PUB_TOPIC: ${PUB_TOPIC}
      PUB_QUEUE: ${PUB_QUEUE}
      SUB_QUEUE: ${SUB_QUEUE}
      SUB_EXCHANGE: ${SUB_EXCHANGE}
      # change to local controller config (lcX_q1)
      SUB_TOPIC: ${SUB_TOPIC}
      MQ_NAME: ${MQ_NAME}
      MQ_HOST: ${MQ_HOST}
      MQ_PORT: ${MQ_PORT}
      DOMAIN_CONTROLLER_URL: ${DOMAIN_CONTROLLER_URL}
      DOMAIN_CONTROLLER_PULL_URL: ${DOMAIN_CONTROLLER_PULL_URL}
      DOMAIN_CONTROLLER_PULL_INTERVAL: ${DOMAIN_CONTROLLER_PULL_INTERVAL}
      KYTOS_URL: ${KYTOS_URL}
    depends_on:
      - mongo-ready
      - rabbitmq3
    entrypoint: [ "gunicorn", "swagger_server.__main__:app", "-b", "0.0.0.0:8080" ]

  tenet-sdx-lc:
    container_name: tenet-sdx-lc
    image: tenet-sdx-lc
    privileged: true
    restart: always
    tty: true
    networks:
      kytos_network:
        ipv4_address: 192.168.0.17
    ports:
      - 8083:8080
    volumes:
      - ./container-sdx-lc/logs/tenet:/var/log
      - ./scripts:/scripts
    env_file: 
      - .env
    environment:
      MONGODB_CONNSTRING: ${MONGODB_CONNSTRING}
      MONGO_HOST_SEEDS: ${MONGO_HOST_SEEDS}
      MONGO_INITDB_ROOT_USERNAME: ${ROOT_DB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${ROOT_DB_PASS}
      MONGO_USERNAME: 'tenet_user'
      MONGO_PASSWORD: 'tenet_pwd'
      MONGO_DBNAME: 'tenet'
      MODEL_VERSION: ${MODEL_VERSION}
      OXPO: 'kytos'
      OXPO_NAME: 'tenet-oxp'
      OXPO_URL: 'tenet.ac.za'
      # SDX_LC Variables
      SDXLC_MONGO_DB: ${SDX_LC_DB_NAME}
      SDXLC_MONGO_COLLECTION: 'tenet-sdx-lc'
      SDXLC_MONGO_USERNAME: ${SDX_LC_DB_USER}
      SDXLC_MONGO_PASSWOD: ${SDX_LC_DB_PASS}
      SDXLC_DOMAIN: 'tenet'
      # change to local controller host name
      SDXLC_HOST: ${SDX_LC_HOST}
      SDXLC_PORT: ${SDX_LC_PORT}
      SDXLC_VERSION: ${SDX_LC_VERSION}
      SDX_MQ_IP: ${SDX_MQ_IP}
      PUB_TOPIC: ${PUB_TOPIC}
      PUB_QUEUE: ${PUB_QUEUE}
      SUB_QUEUE: ${SUB_QUEUE}
      SUB_EXCHANGE: ${SUB_EXCHANGE}
      # change to local controller config (lcX_q1)
      SUB_TOPIC: ${SUB_TOPIC}
      MQ_NAME: ${MQ_NAME}
      MQ_HOST: ${MQ_HOST}
      MQ_PORT: ${MQ_PORT}
      DOMAIN_CONTROLLER_URL: ${DOMAIN_CONTROLLER_URL}
      DOMAIN_CONTROLLER_PULL_URL: ${DOMAIN_CONTROLLER_PULL_URL}
      DOMAIN_CONTROLLER_PULL_INTERVAL: ${DOMAIN_CONTROLLER_PULL_INTERVAL}
      KYTOS_URL: ${KYTOS_URL}
    depends_on:
      - mongo-ready
      - rabbitmq3
    entrypoint: [ "gunicorn", "swagger_server.__main__:app", "-b", "0.0.0.0:8080" ]

networks:
  kytos_network:
    ipam:
      driver: default
      config:
        - subnet: 192.168.0.0/24
          gateway: 192.168.0.1

volumes:
  persistent:
