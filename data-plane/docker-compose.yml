version: '3.9'

services:

  amlight:
    container_name: amlight
    image: amlight
    privileged: true
    tty: true
    restart: always
    networks:
      kytos_network:
        ipv4_address: 192.168.0.2
    ports:
      - 6653:6653
      - 8181:8181
    volumes:
      - ./tests:/tests
      - ./scripts:/scripts
      - ./etc/kytos:/etc/kytos
    env_file: 
      - .env
    environment:
      MONGODB_CONNSTRING: ${MONGODB_CONNSTRING}
      MONGO_HOST_SEEDS: ${MONGO_HOST_SEEDS}
      MONGO_INITDB_ROOT_USERNAME: ${ROOT_MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${ROOT_MONGO_PASS}
      MONGO_USERNAME: 'amlight_user'
      MONGO_PASSWORD: 'amlight_pwd'
      MONGO_DBNAME: 'amlight'
      SDX_OXPO: 'kytos'
      SDX_NAME: 'Amlight-OXP'
      SDX_VERSION: ${SDX_VERSION}
      SDX_URL: 'amlight.net'
    depends_on:
      - mongo-ready
      - rabbitmq3
    entrypoint: ["/scripts/amlight_sdx_lc_kytos.sh"]

  sax:
    container_name: sax
    image: sax
    privileged: true
    tty: true
    restart: always
    networks:
      kytos_network:
        ipv4_address: 192.168.0.3
    ports:
      - 6654:6653
      - 8282:8181
    volumes:
      - ./tests:/tests
      - ./scripts:/scripts
      - ./etc/kytos:/etc/kytos
    env_file: 
      - .env
    environment:
      MONGODB_CONNSTRING: ${MONGODB_CONNSTRING}
      MONGO_HOST_SEEDS: ${MONGO_HOST_SEEDS}
      MONGO_INITDB_ROOT_USERNAME: ${ROOT_MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${ROOT_MONGO_PASS}
      MONGO_USERNAME: 'sax_user'
      MONGO_PASSWORD: 'sax_pwd'
      MONGO_DBNAME: 'sax'
      SDX_OXPO: 'kytos'
      SDX_NAME: 'Ampath-OXP'
      SDX_VERSION: ${SDX_VERSION}
      SDX_URL: 'ampath.net'
    depends_on:
      - mongo-ready
      - rabbitmq3
    entrypoint: ["/scripts/sax_sdx_lc_kytos.sh"]

  tenet:
    container_name: tenet
    image: tenet
    privileged: true
    restart: always
    tty: true
    networks:
      kytos_network:
        ipv4_address: 192.168.0.4
    ports:
      - 6655:6653
      - 8383:8181
    volumes:
      - ./tests:/tests
      - ./scripts:/scripts
      - ./etc/kytos:/etc/kytos
    env_file: 
      - .env
    environment:
      MONGODB_CONNSTRING: ${MONGODB_CONNSTRING}
      MONGO_HOST_SEEDS: ${MONGO_HOST_SEEDS}
      MONGO_INITDB_ROOT_USERNAME: ${ROOT_MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${ROOT_MONGO_PASS}
      MONGO_USERNAME: 'tenet_user'
      MONGO_PASSWORD: 'tenet_pwd'
      MONGO_DBNAME: 'tenet'
      SDX_OXPO: 'kytos'
      SDX_NAME: 'tenet-oxp'
      SDX_VERSION: ${SDX_VERSION}
      SDX_URL: 'tenet.ac.za'
    depends_on:
      - mongo-ready
      - rabbitmq3
    entrypoint: ["/scripts/tenet_sdx_lc_kytos.sh"]

  sdx-test:
    container_name: sdx-test
    image: sdx-test
    privileged: true
    tty: true
    restart: always
    networks:
      kytos_network:
        ipv4_address: 192.168.0.5
    ports:
      - 6656:6653
      - 8084:8080
      - 8484:8181
    volumes:
      - ./tests:/tests
      - ./scripts:/scripts
      - ./etc/kytos:/etc/kytos
    env_file: 
      - .env
    environment:
      MONGODB_CONNSTRING: ${MONGODB_CONNSTRING}
      MONGO_HOST_SEEDS: ${MONGO_HOST_SEEDS}
      MONGO_INITDB_ROOT_USERNAME: ${ROOT_MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${ROOT_MONGO_PASS}
      MONGO_USERNAME: 'sdx_test_user'
      MONGO_PASSWORD: 'sdx_test_pwd'
      MONGO_DBNAME: 'sdx_test'
      SDX_OXPO: 'kytos'
      SDX_NAME: 'Test-OXP'
      SDX_VERSION: ${SDX_VERSION}
      SDX_URL: 'test.net'
    depends_on:
      - mongo-ready
      - rabbitmq3
    entrypoint: ["/scripts/test_sdx_lc_kytos.sh"]


  mongo1t:
    container_name: mongo1t
    image: sdx-mongo
    restart: always
    networks:
      kytos_network:
        ipv4_address: 192.168.0.6
    ports:
      - 27027:27027
    volumes:
      - ./os_base/mongo_base:/mongo_base
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0", "--port", "27027" ]
    env_file:
      - .env
    environment:
      MONGODB_CONNSTRING: ${MONGODB_CONNSTRING}
      MONGO_HOST_SEEDS: ${MONGO_HOST_SEEDS}
      MONGO_INIT_ROOT_USERNAME: ${ROOT_MONGO_USER}
      MONGO_INIT_ROOT_PASSWORD: ${ROOT_MONGO_PASS}
      MONGO_DBNAME: ${ROOT_MONGO_DB}

  mongo2t:
    container_name: mongo2t
    image: sdx-mongo
    restart: always
    networks:
      kytos_network:
        ipv4_address: 192.168.0.7
    ports:
      - 27028:27028
    volumes:
      - ./os_base/mongo_base:/mongo_base
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0", "--port", "27028" ]
    env_file:
      - .env
    environment:
      MONGODB_CONNSTRING: ${MONGODB_CONNSTRING}
      MONGO_HOST_SEEDS: ${MONGO_HOST_SEEDS}
      MONGO_INIT_ROOT_USERNAME: ${ROOT_MONGO_USER}
      MONGO_INIT_ROOT_PASSWORD: ${ROOT_MONGO_PASS}
      MONGO_DBNAME: ${ROOT_MONGO_DB}

  mongo3t:
    container_name: mongo3t
    image: sdx-mongo
    restart: always
    networks:
      kytos_network:
        ipv4_address: 192.168.0.8
    ports:
      - 27029:27029
    volumes:
      - ./os_base/mongo_base:/mongo_base
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0", "--port", "27029" ]
    env_file:
      - .env
    environment:
      MONGODB_CONNSTRING: ${MONGODB_CONNSTRING}
      MONGO_HOST_SEEDS: ${MONGO_HOST_SEEDS}
      MONGO_INIT_ROOT_USERNAME: ${ROOT_MONGO_USER}
      MONGO_INIT_ROOT_PASSWORD: ${ROOT_MONGO_PASS}
      MONGO_DBNAME: ${ROOT_MONGO_DB}

  mongo-setup:
    container_name: mongo-rs-init
    image: sdx-mongo
    restart: on-failure
    networks:
      kytos_network:
        ipv4_address: 192.168.0.9
    volumes:
      - ./scripts:/scripts
    entrypoint: ["/scripts/rs-init.sh"]
    env_file:
      - .env
    environment:
      MONGODB_CONNSTRING: ${MONGODB_CONNSTRING}
      MONGO_HOST_SEEDS: ${MONGO_HOST_SEEDS}
      MONGO_INIT_ROOT_USERNAME: ${ROOT_MONGO_USER}
      MONGO_INIT_ROOT_PASSWORD: ${ROOT_MONGO_PASS}
      MONGO_DBNAME: ${ROOT_MONGO_DB}
    depends_on:
      - mongo1t
      - mongo2t
      - mongo3t

  mongo-ready:
    container_name: mongo-test-ready
    image: sdx-mongo
    restart: on-failure
    networks:
      kytos_network:
        ipv4_address: 192.168.0.10
    volumes:
      - ./scripts:/scripts
    entrypoint: ["/scripts/rs-add.sh"]
    env_file:
      - .env
    environment:
      MONGODB_CONNSTRING: ${MONGODB_CONNSTRING}
      MONGO_HOST_SEEDS: ${MONGO_HOST_SEEDS}
      MONGO_INIT_ROOT_USERNAME: ${ROOT_MONGO_USER}
      MONGO_INIT_ROOT_PASSWORD: ${ROOT_MONGO_PASS}
      MONGO_DBNAME: ${ROOT_MONGO_DB}
    depends_on:
      - mongo-setup

  mininet:
    container_name: mininet
    image: mininet
    privileged: true
    tty: true
    networks:
      kytos_network:
        ipv4_address: 192.168.0.11
    volumes:
      - /lib/modules:/lib/modules
    depends_on:
      - amlight
      - sax
      - tenet

  rabbitmq3:
    container_name: "rabbitmq"
    image: sdx-rabbit
    networks:
      kytos_network:
        ipv4_address: 192.168.0.12
    ports:
      # AMQP protocol port
      - '5672:5672'
      # HTTP management UI
      - '15672:15672'
    env_file:
      - .env
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}


  my-mongodb:
    image: mongo:3.7
    container_name: mongodb-lc
    ports:
      - 27017:27017
    networks:
      kytos_network:
        ipv4_address: 192.168.0.13
    environment:
      MONGO_INITDB_ROOT_USERNAME: sdx
      MONGO_INITDB_ROOT_PASSWORD: passw
      MONGODB_DATA_DIR: /data/db
    volumes:
      # named volumes
      - ~/mongodb:/data/db

  sdx-lc:
    image: sdx-lc
    container_name: sdx-lc
    tty: true
    networks:
      kytos_network:
        ipv4_address: 192.168.0.14
    ports:
      - 8080:8080
    environment:
      - MONGODB_CONNSTRING=mongodb://sdx:passw@192.168.201.205:27017/
      - SDX_MQ_IP=152.54.3.143
      - SDXLC_DOMAIN=amlight
      # change to local controller host name
      - SDXLC_HOST=aw-sdx-lc-1.renci.org
      - SDXLC_PORT=8080
      - SDXLC_VERSION=1.0.0
      - PUB_TOPIC=topo
      - PUB_QUEUE=sdx_q1
      - SUB_QUEUE=connection
      - SUB_EXCHANGE=connection
      # change to local controller config (lcX_q1)
      - SUB_TOPIC=lc1_q1
      - MQ_NAME=hello
      - MQ_HOST=aw-sdx-monitor.renci.org
      - MQ_PORT=5672 
      - DB_NAME=test-db
      - DB_CONFIG_TABLE_NAME=sdx-config-test-1
      - DOMAIN_CONTROLLER_URL=http://192.168.201.205:8088/SDX-LC/1.0.0/provision
      - DOMAIN_CONTROLLER_PULL_URL=http://192.168.201.205:8088/SDX-LC/1.0.0/topology
      - DOMAIN_CONTROLLER_PULL_INTERVAL=180
      - KYTOS_URL=http://192.168.201.205:8088/SDX-LC/1.0.0/connection

networks:
  kytos_network:
    ipam:
      driver: default
      config:
        - subnet: 192.168.0.0/24
          gateway: 192.168.0.1

volumes:
  persistent:
