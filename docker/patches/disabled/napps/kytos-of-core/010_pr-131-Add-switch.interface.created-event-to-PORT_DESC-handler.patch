From 64a6cc8dfcf866acc41fdeeb3684127c3a4d50a3 Mon Sep 17 00:00:00 2001
From: Carlos Magno <cmagnobarbosa@gmail.com>
Date: Mon, 17 May 2021 11:20:11 -0300
Subject: [PATCH 1/2] Add ``switch.interface.created`` event to ``PORT_DESC``
 handler

Now ``PORT_DESC`` method generate the events ``kytos/of_core.switch.interface.created``
and ``switch.port.created``. Before this commit, only `port.created` was generated
in `PORT_DESC`.
---
 tests/unit/v0x04/test_utils.py | 4 ++--
 v0x04/utils.py                 | 4 ++++
 2 files changed, 6 insertions(+), 2 deletions(-)

diff --git a/tests/unit/v0x04/test_utils.py b/tests/unit/v0x04/test_utils.py
index 70ec9a9..0003e48 100644
--- a/tests/unit/v0x04/test_utils.py
+++ b/tests/unit/v0x04/test_utils.py
@@ -50,14 +50,14 @@ def test_handle_port_desc(self, mock_event_buffer):
         handle_port_desc(self.mock_controller, self.mock_switch, [mock_port])
         self.assertEqual(self.mock_switch.update_interface.call_count, 1)
         mock_event_buffer.assert_called()
-        self.assertEqual(self.mock_controller.buffers.app.put.call_count, 1)
+        self.assertEqual(self.mock_controller.buffers.app.put.call_count, 2)
 
         self.mock_switch.update_interface.call_count = 0
         self.mock_controller.buffers.app.put.call_count = 0
         handle_port_desc(self.mock_controller, self.mock_switch, [mock_port])
         self.assertEqual(self.mock_switch.update_interface.call_count, 1)
         mock_event_buffer.assert_called()
-        self.assertEqual(self.mock_controller.buffers.app.put.call_count, 1)
+        self.assertEqual(self.mock_controller.buffers.app.put.call_count, 2)
 
     @patch('napps.kytos.of_core.v0x04.utils.emit_message_out')
     def test_send_echo(self, mock_emit_message_out):
diff --git a/v0x04/utils.py b/v0x04/utils.py
index 80a5f55..c189d73 100644
--- a/v0x04/utils.py
+++ b/v0x04/utils.py
@@ -125,6 +125,9 @@ def handle_port_desc(controller, switch, port_list):
                                   speed=port.curr_speed.value,
                                   config=config)
         switch.update_interface(interface)
+        interface_event = KytosEvent(name='kytos/of_core.switch'
+                                     '.interface.created',
+                                     content={'interface': interface})
         port_event = KytosEvent(name='kytos/of_core.switch.port.created',
                                 content={
                                     'switch': switch.id,
@@ -136,6 +139,7 @@ def handle_port_desc(controller, switch, port_list):
                                         }
                                     })
         controller.buffers.app.put(port_event)
+        controller.buffers.app.put(interface_event)
 
 
 def send_echo(controller, switch):

From 9597cd4ef7eae4ef566d8a82be5496e6a71b8268 Mon Sep 17 00:00:00 2001
From: Carlos Magno <cmagnobarbosa@gmail.com>
Date: Wed, 19 May 2021 15:21:08 -0300
Subject: [PATCH 2/2] Create variable to store event name

---
 v0x04/utils.py | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/v0x04/utils.py b/v0x04/utils.py
index c189d73..b5e45cb 100644
--- a/v0x04/utils.py
+++ b/v0x04/utils.py
@@ -125,8 +125,8 @@ def handle_port_desc(controller, switch, port_list):
                                   speed=port.curr_speed.value,
                                   config=config)
         switch.update_interface(interface)
-        interface_event = KytosEvent(name='kytos/of_core.switch'
-                                     '.interface.created',
+        event_name = 'kytos/of_core.switch.interface.created'
+        interface_event = KytosEvent(name=event_name,
                                      content={'interface': interface})
         port_event = KytosEvent(name='kytos/of_core.switch.port.created',
                                 content={
