version: '3.8'

services:
  amlight:
    container_name: amlight
    image: amlight
    privileged: true
    networks:
      kytos_network:
        ipv4_address: 192.168.0.2
    ports:
      - 6653:6653
      - 8181:8181
    volumes:
      - "./kytos-init.sh:/kytos-init.sh"
      - "./tests:/tests"
      - "./scripts/wait_for_mongo.py:/scripts/wait_for_mongo.py"
    command:
      - kytosd -l 192.168.0.2 -f
    environment:
      MONGO_USERNAME: amlight_user
      MONGO_PASSWORD: amlight_pw
      MONGO_DBNAME: amlight
      MONGO_HOST_SEEDS: "mongo1t:27027,mongo2t:27028,mongo3t:27029"
    depends_on:
      - mongo-setup
  sax:
    container_name: sax
    image: sax
    privileged: true
    networks:
      kytos_network:
        ipv4_address: 192.168.0.3
    ports:
      - 6654:6653
      - 8282:8181
    volumes:
      - "./kytos-init.sh:/kytos-init.sh"
      - "./tests:/tests"
      - "./scripts/wait_for_mongo.py:/scripts/wait_for_mongo.py"
    command:
      - kytosd -l 192.168.0.3 -f
    environment:
      MONGO_USERNAME: sax_user
      MONGO_PASSWORD: sax_pw
      MONGO_DBNAME: sax
      MONGO_HOST_SEEDS: "mongo1t:27027,mongo2t:27028,mongo3t:27029"
    depends_on:
      - mongo-setup
  tenet:
    container_name: tenet
    image: tenet
    tty: true
    networks:
      kytos_network:
        ipv4_address: 192.168.0.4
    ports:
      - 6655:6653
      - 8383:8181
    volumes:
      - "./kytos-init.sh:/kytos-init.sh"
      - "./tests:/tests"
      - "./scripts/wait_for_mongo.py:/scripts/wait_for_mongo.py"
    command:
      - kytosd -l 192.168.0.4 -f
    environment:
      MONGO_USERNAME: tenet_user
      MONGO_PASSWORD: tenet_pw
      MONGO_DBNAME: tenet
      MONGO_HOST_SEEDS: "mongo1t:27027,mongo2t:27028,mongo3t:27029"
    depends_on:
      - mongo-setup
  
  mongo-setup:
    container_name: mongo-test-rs-init
    image: mongo:5.0
    restart: on-failure
    networks:
      kytos_network:
        ipv4_address: 192.168.0.5
    volumes:
      - ./scripts:/scripts
    entrypoint: ["/scripts/rs-init.sh"]
    environment:
      MONGO_INITDB_ROOT_USERNAME: root_user
      MONGO_INITDB_ROOT_PASSWORD: root_pw
      MONGO_USERNAME: root_user
      MONGO_PASSWORD: root_pw
      MONGO_DBNAME: admin
    depends_on:
      - mongo1t
      - mongo2t
      - mongo3t

  mongo1t:
    container_name: mongo1t
    image: mongo:5.0
    networks:
      kytos_network:
        ipv4_address: 192.168.0.6
    ports:
      - 27027:27027
    restart: always
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0", "--port", "27027" ]
    depends_on:
      - mongo2t
      - mongo3t

  mongo2t:
    container_name: mongo2t
    image: mongo:5.0
    networks:
      kytos_network:
        ipv4_address: 192.168.0.7
    ports:
      - 27028:27028
    restart: always
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0", "--port", "27028" ]

  mongo3t:
    container_name: mongo3t
    image: mongo:5.0
    networks:
      kytos_network:
        ipv4_address: 192.168.0.8
    ports:
      - 27029:27029
    restart: always
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0", "--port", "27029" ]

  mininet:
    container_name: mininet
    image: mininet
    privileged: true
    tty: true
    networks:
      kytos_network:
        ipv4_address: 192.168.0.9
    volumes:
      - /lib/modules:/lib/modules
    depends_on:
      - amlight
      - sax
      - tenet 

networks:
  kytos_network:
    external: true 
